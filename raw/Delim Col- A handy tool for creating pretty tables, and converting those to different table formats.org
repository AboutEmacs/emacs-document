#+TITLE: Delim Col: A handy tool for creating pretty tables, and converting those to different table formats
#+URL: https://emacsnotes.wordpress.com/2018/09/24/delim-col-a-handy-tool-for-creating-pretty-tables-and-converting-those-to-different-table-formats/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 10月 22日 星期一 11:53:10 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
* A Problem ... and a Solution
   :PROPERTIES:
   :CUSTOM_ID: a-problem-and-a-solution
   :END:

You are given the following table [[https://github.com/emacs-mirror/emacs/blob/75386e305f388ff51bc8cf9945f52c29c14427cd/lisp/delim-col.el#L35][1]]

#+BEGIN_EXAMPLE
    a b c d
    aaaa bb ccc ddddd
    aaa bbb cccc dddd
    aa bb ccccccc ddd
#+END_EXAMPLE

How would you generate this table

#+BEGIN_EXAMPLE
    [ a , b , c , d ]
    [ aaaa, bb , ccc , ddddd ]
    [ aaa , bbb, cccc , dddd ]
    [ aa , bb , ccccccc, ddd ]
#+END_EXAMPLE

and this table

#+BEGIN_EXAMPLE
    a [ b , c ] d
    aaaa [ bb , ccc ] ddddd
    aaa [ bbb, cccc ] dddd
    aa [ bb , ccccccc ] ddd
#+END_EXAMPLE

and this table

#+BEGIN_EXAMPLE
    [ <a> , <b> , <c> , <d> ]
    [ <aaaa>, <bb> , <ccc> , <ddddd> ]
    [ <aaa> , <bbb>, <cccc> , <dddd> ]
    [ <aa> , <bb> , <ccccccc>, <ddd> ]
#+END_EXAMPLE

and this table

#+BEGIN_EXAMPLE
    a [ <b> , <c> ] d
    aaaa [ <bb> , <ccc> ] ddddd
    aaa [ <bbb>, <cccc> ] dddd
    aa [ <bb> , <ccccccc> ] ddd
#+END_EXAMPLE

A answer is you use one of the Emacs' built-in library called =delim-col=[[https://github.com/emacs-mirror/emacs/blob/master/lisp/delim-col.el][1]].

* What does =delim-col= do?
   :PROPERTIES:
   :CUSTOM_ID: what-does-delim-col-do
   :END:

The =delim-col= package describes itself as

#+BEGIN_QUOTE
  =delim-col= helps to prettify columns in a text region or rectangle
#+END_QUOTE

In my opinion, the above description doesn't tell much about what it offers a user. Instead, I would describe the package as

#+BEGIN_QUOTE
  =delim-col= creates pretty tables from a text region and helps convert those tables in to different table formats like =TSV=[[https://en.wikipedia.org/wiki/Tab-separated_values][1]], =CSV=[[https://en.wikipedia.org/wiki/Comma-separated_values][1]], =Org=[[https://www.gnu.org/software/emacs/manual/html_node/org/Built_002din-table-editor.html#Built_002din-table-editor][1]], =LaTeX=[[https://en.wikibooks.org/wiki/LaTeX/Mathematics#Matrices_and_arrays][1]], =GFM=[[https://docs.gitlab.com/ee/user/markdown.html#tables][1]], [[https://help.github.com/articles/organizing-information-with-tables/][2]]   or any other makeshift format that you may come up with.
#+END_QUOTE

* What does =delim-col= NOT do?
   :PROPERTIES:
   :CUSTOM_ID: what-does-delim-col-not-do
   :END:

In doing the above conversions, you would expect that =delim-col= prompts you for all these parameters

1. the regexp which separates each column
2. a string to be inserted before (and after) each column
3. a string to be inserted between each column
4. a string to be inserted at the beginning (and end of) each row

and a way to add padding.

Unfortunately, the above parameters are hard-coded and aren't gathered from the user on each run.

* Step 1: Create a menu
   :PROPERTIES:
   :CUSTOM_ID: step-1-create-a-menu
   :END:

Copy the =Emacs Lisp= snippet[[https://raw.githubusercontent.com/emacksnotes/emacsnotes.wordpress.com/master/my-delim-col-menu.el][1]] below to your =.emacs= and restart your =Emacs=.

This snippet does the following

      1. modifies the commands =delimit-columns-region= and =delimit-columns-rectangle= so that they prompt you for input on every run.
      2. adds a sub-menu named =Extra Tools= to the menu. To this sub-menu, it adds another sub-menu named =Delimit Columns in ...=.

#+BEGIN_EXAMPLE
    (defun my-delimits-column-region
     (orig-fun &rest args)
     (let
     ((delimit-columns-separator
     (read-regexp
     (format "%s (%s): " "Specify the regexp which separates each column" delimit-columns-separator)
     (list delimit-columns-separator)))
     (delimit-columns-before
     (read-string
     (format "%s (%s): " "Specify a string to be inserted before each column" delimit-columns-before)
     nil nil delimit-columns-before))
     (delimit-columns-after
     (read-string
     (format "%s (%s): " "Specify a string to be inserted after each column" delimit-columns-after)
     nil nil delimit-columns-after))
     (delimit-columns-str-separator
     (read-string
     (format "%s (%s): " "Specify a string to be inserted between each column" delimit-columns-str-separator)
     nil nil delimit-columns-str-separator))
     (delimit-columns-str-before
     (read-string
     (format "%s (%s): " "Specify a string to be inserted before the first column" delimit-columns-str-before)
     nil nil delimit-columns-str-before))
     (delimit-columns-str-after
     (read-string
     (format "%s (%s): " "Specify a string to be inserted after the last column" delimit-columns-str-after)
     nil nil delimit-columns-str-after))
     (delimit-columns-format
     (let*
     ((choices
     '(("Align Columns" . t)
     ("No Formatting")
     ("Align Separators" . separator)
     ("Pad Columns" . padding)))
     (default-choice
     (car
     (rassoc delimit-columns-format choices)))
     (choice
     (completing-read
     (format "%s (%s): " "Specify how to format columns" default-choice)
     choices nil t nil nil default-choice)))
     (message "%s" choice)
     (assoc-default choice choices))))
     (apply orig-fun args)))

    (advice-add 'delimit-columns-region :around #'my-delimits-column-region)
    (advice-add 'delimit-columns-rectangle :around #'my-delimits-column-region)

    (define-key-after global-map
     [menu-bar extra-tools]
     (cons "Extra Tools"
     (easy-menu-create-menu "Extra Tools" nil))
     'tools)

    (easy-menu-define my-delim-col-menu nil "Menu for Delim Col"
     '("Delimit Columns in ..."
     ["Region" delimit-columns-region :help "Prettify all columns in a text region"]
     ["Rectangle" delimit-columns-rectangle :help "Prettify all columns in a text rectangle"]
     "---"
     ["Customize" delimit-columns-customize :help "Customization of `columns' group"]))

    (easy-menu-add-item (current-global-map) '("menu-bar" "extra-tools") my-delim-col-menu)
#+END_EXAMPLE

* Step 2: Ensure that you have the =Extra Tools= submenu
   :PROPERTIES:
   :CUSTOM_ID: step-2-ensure-that-you-have-the-extra-tools-submenu
   :END:

Once you restart your Emacs, you would see an entry for =Extra Tools= in the menu bar.  If you aren't seeing this submenu, repeat the previous step.

* Step 3: Copy-paste the table in to an Emacs buffer
   :PROPERTIES:
   :CUSTOM_ID: step-3-copy-paste-the-table-in-to-an-emacs-buffer
   :END:

Copy-paste the input table either from this article or from the =delim-col= library [[https://github.com/emacs-mirror/emacs/blob/75386e305f388ff51bc8cf9945f52c29c14427cd/lisp/delim-col.el#L35][1]].  It is important to note that the table scraped from this article will have spaces (and not tabs), but the one from =delim-col= will have tabs.

* Step 4: Mark the region or rectangle
   

* Step 5: Do the conversion
   :PROPERTIES:
   :CUSTOM_ID: step-5-do-the-conversion
   :END:

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-from-2018-09-23-22-08-05.png?w=740]]

Emacs will prompt you for further input.   Key in the parameters as you deem fit.

The prompt string shows the factory default settings, and they are enclosed within  =()=. You can press =Enter= to accept the factory settings.

When copy-pasting the original table from this web article in to your Emacs, the table will contain spaces. So, when prompted with =Specify the regexp which separates each column= use  = += (i.e. =SPC+=).

When prompted with =Specify how to format columns= you can press =TAB= , and choose among the candidates shown.  As you see from screenshot below, for my own run, I chose =Align Separators=.

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-from-2018-09-23-22-28-54.png?w=740]]

Here is the output I get at the end of one such run.

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-from-2018-09-23-22-33-24.png?w=740]]

* Concluding Words
   :PROPERTIES:
   :CUSTOM_ID: concluding-words
   :END:

You can pose the original problem to experienced users of Emacs.  Each user will have his own suggestions.  Most users will suggest rectangle commands[[https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html][1]].  Some users will suggest that you use =org-table-convert-region=[[https://github.com/emacs-mirror/emacs/blob/d0e2a341dd9a9a365fd311748df024ecb25b70ec/lisp/org/org-table.el#L579][1]] to convert the original table in to =Org=-format table[[https://www.gnu.org/software/emacs/manual/html_node/org/Built_002din-table-editor.html#Built_002din-table-editor][1]], and create a makeshift code based on =orgtbl-to-generic= [[https://github.com/emacs-mirror/emacs/blob/d0e2a341dd9a9a365fd311748df024ecb25b70ec/lisp/org/org-table.el#L4798][1]].  (I bet, no user will suggest =delim-col= because it is a package which lacks an entry in the user manual.) None of the solutions you hear have the simplicity and quickness as =delim-col=.  In my opinion,  =delim-col= is a very useful tool to have in your toolkit.

* Appendix
   :PROPERTIES:
   :CUSTOM_ID: appendix
   :END:

This article on =delim-col= was created as an aid to one of my friends[[https://www.reddit.com/r/emacs/comments/9i2o7r/quoting_two_columns_of_text_using_macros/][1]], a newcomer to Emacs. She wanted to convert a table scraped from web[[https://useast.ensembl.org/info/genome/stable_ids/prefixes.html][1]] in to a Python dictionary[[https://docs.python.org/3/tutorial/datastructures.html#dictionaries][1]].

Specifically, she wanted to convert an HTML  table that looks like this

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-2018-9-23-ensembl-stable-id-prefixes.png?w=740]]

in to a =python= dictionary that looks like this

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-from-2018-09-24-00-04-58.png?w=740]]

With a little imagination, it is easy to see how she can use =delim-col= to achieve much of what she wants.

That said, I hear those of you asking me “What if the second column in the friend's table happened to be numeric, and she didn't want the numeric fields quoted ...”.  In this case, I suppose, =delim-col= doesn't have anything immediate to offer, and I am afraid, the friend needs to switch to other means.
