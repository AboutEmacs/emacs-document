#+TITLE: Emacs - An IDE in the Console
#+URL: https://www.linkedin.com/pulse/emacs-ide-console-palmer-cluff/?published=t
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 10月 25日 星期四 12:00:29 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
A lot of developers use IDE's (Eclipse, NetBeans, Visual Studio) and GUI-based text editors (Sublime Text, NotePad++, Atom) for their day-to-day coding tasks. At times, one may need to edit a remote file and you typically have one of two options:

1. Edit the file remotely in the terminal via Vim, Emacs, or Nano
2. Download the file locally, edit using your favorite IDE or GUI editor, then upload it again to the server

Both ways work, but working remotely with console-based editors can be a bit of a pain, and sometimes you may not be in a situation to use the software of your choice to edit the file(s) locally (like when you are using a colleagues computer and they won't let you install anything).

Well, there just so happens to be some Emacs packages you can enable to have your remote (or local) Emacs text editor behave more like your favorite IDE or GUI editor.

As a note, this is *not* an anti-Vim or anti-GUI rant, these are just some pointers on how to extend your Emacs configuration to behave more like a minimal non-bloated IDE, and less like a hard-to-use-too-many-extra-features text editor.


** Code Formatting
   :PROPERTIES:
   :CUSTOM_ID: code-formatting
   :END:

Emacs has various "modes" for some of the most common programming languages (C, C++, Java, HTML, JavaScript, Python, etc) to help format code. If you want to indent a code block, Emacs already has you covered and will indent the next line automatically. You may find that some language modes are not already built in (such as PHP, Lua, and some of the newer ones), but they can be easily added at a whim's notice.

[[https://media.licdn.com/dms/image/C4E12AQFw37wEDHQySw/article-inline_image-shrink_1500_2232/0?e=1545868800&v=beta&t=jRWSXAAmSc7kKr1sq2Xrc26vIofk52gsQJGqLsxCWQA]]


** Auto-completion
   :PROPERTIES:
   :CUSTOM_ID: auto-completion
   :END:

Auto-completion is a feature not typically found in text-based editors. This feature is not built in, but if you want to add this you can use the [[https://github.com/auto-complete/auto-complete][Auto-Complete]] Emacs library that gives you a nice IntelliSense-like menu. Emacs can also auto-close parenthesis, brackets, quotes, and other characters that are commonly paired together.

[[https://media.licdn.com/dms/image/C4E12AQFlzeAghZSGoA/article-inline_image-shrink_1000_1488/0?e=1545868800&v=beta&t=DX7C5E_cEghHmccwIopzFAkaxcZLgGWVScoQqTrCyIg]]

** Spell-checking
   :PROPERTIES:
   :CUSTOM_ID: spell-checking
   :END:

Emacs has spell-checking built in. By default it uses an English dictionary, but this can be changed along with adding your own words to a personal dictionary file to help avoid false positives. You can also set it where you only want Emacs to spell-check comments and strings and to ignore all other programming-specific sections of code.

[[https://media.licdn.com/dms/image/C4E12AQE5J4WX6I4nLQ/article-inline_image-shrink_1500_2232/0?e=1545868800&v=beta&t=8lrw0PC_BejclkLAs_ehbS6ecyPchI52ZcCUrpdt2Hw]]

** Personal Extensions
   :PROPERTIES:
   :CUSTOM_ID: personal-extensions
   :END:

Emacs is open-sourced, and the code base is available to everyone. Using Emacs' built-in language (Emacs Lisp; or Elisp as most call it), you can extend Emacs by writing your own functions and packages. Below is a short function that will automatically add a closing HTML tag as soon as the opening tag has been typed only if the user is editing an HTML file:

[[https://media.licdn.com/dms/image/C5612AQF2uPYbmnAEPw/article-inline_image-shrink_1500_2232/0?e=1545868800&v=beta&t=5YGijg-5LBQeqmOhlGJrlSJapbMynoJ7Z_s9U-2nBYc]]

** Other Customizations
   :PROPERTIES:
   :CUSTOM_ID: other-customizations
   :END:

There are loads of other features that can easily be enabled or disabled to make Emacs perform like your personally-made IDE. Some include:

- Keybindings
- Macros
- SSH/SCP remote file editing support
- xterm mouse support
- UI modifications
- Abbreviation expansions
- Automatic file backup
- Embedded file explorer
- Babel support for having multiple programming languages in the same file
- File encryption
- And more!

** Takeaway
   :PROPERTIES:
   :CUSTOM_ID: takeaway
   :END:

Emacs is extremely extendable, but may not be for the faint of heart. To make Emacs behave exactly like you want it, prepare to spend a lot of time tinkering with the range of features and open-source packages available for it. Whatever time you spend tweaking Emacs to behave like your own IDE will definitely be worth it!
