#+TITLE: org-mode in Your Pocket
#+URL: https://nakkaya.com/2010/03/19/org-mode-in-your-pocket-setting-up-mobileorg/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 09月 12日 星期三 19:02:19 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

[[http://mobileorg.ncogni.to][MobileOrg]] is an iPhone application that lets you view, modify org files on the go. Its a great application but documentation is scarce and a bit confusing. This post documents the steps required to configure org-mode so it can sync with MobileOrg.

By default org-mode looks into the "~/org/" folder for your org files if you keep them somewhere else set org-directory variable to point to it,

#+BEGIN_EXAMPLE
    (setq org-directory "~/Documents/org/")
    (setq org-mobile-inbox-for-pull "~/Documents/org/from-mobile.org")
#+END_EXAMPLE

MobileOrg uses WebDav to synchronize your files, if you mount your WebDav as a disk, you need to set org-mobile-directory to point to it, alternatively you can use org-mobile push/pull hooks and use scp instead.

#+BEGIN_EXAMPLE
    (setq org-mobile-directory "/Volumes/nakkaya.com/org/")
#+END_EXAMPLE

By default no files are staged to WebDav, you need to set org-mobile-files to the list of files you want to have access on the iPhone,

#+BEGIN_EXAMPLE
    (setq org-mobile-files (quote ("gtd.org")))
#+END_EXAMPLE

When you sync your org files org-mobile will add a property drawer to your files, if you want to get rid of it you can use,

#+BEGIN_EXAMPLE
    (setq org-mobile-force-id-on-agenda-items nil)
#+END_EXAMPLE

but beware that if you have file structure such as,

#+BEGIN_EXAMPLE
     0_sync_master.sh 1_add_new_article_manual.sh 1_add_new_article_newspaper.sh 2_start_translating.sh 3_continue_the_work.sh 4_finish.sh 5_pause.sh base.sh parse_url_by_manual.sh parse_url_by_newspaper.py parse_url_by_newspaper.sh project.cfg reformat.sh texput.log urls_checker.sh Task
     0_sync_master.sh 1_add_new_article_manual.sh 1_add_new_article_newspaper.sh 2_start_translating.sh 3_continue_the_work.sh 4_finish.sh 5_pause.sh base.sh parse_url_by_manual.sh parse_url_by_newspaper.py parse_url_by_newspaper.sh project.cfg reformat.sh texput.log urls_checker.sh SubTask
     0_sync_master.sh 1_add_new_article_manual.sh 1_add_new_article_newspaper.sh 2_start_translating.sh 3_continue_the_work.sh 4_finish.sh 5_pause.sh base.sh parse_url_by_manual.sh parse_url_by_newspaper.py parse_url_by_newspaper.sh project.cfg reformat.sh texput.log urls_checker.sh Task
     0_sync_master.sh 1_add_new_article_manual.sh 1_add_new_article_newspaper.sh 2_start_translating.sh 3_continue_the_work.sh 4_finish.sh 5_pause.sh base.sh parse_url_by_manual.sh parse_url_by_newspaper.py parse_url_by_newspaper.sh project.cfg reformat.sh texput.log urls_checker.sh SubTask
#+END_EXAMPLE

and you edit one of the subtasks org-mobile will have no way to determine which one to edit, other than that you will be safe. As for agendas only your custom agenda views are synchronized, I also suggest you use org-agenda-show-all-dates and set it to nil, so it filters empty days, it makes viewing agendas easier.

#+BEGIN_EXAMPLE
     (setq org-agenda-custom-commands
     '(("w" todo "TODO")
     ("h" agenda "" ((org-agenda-show-all-dates nil)))
     ("W" agenda "" ((org-agenda-ndays 21)
     (org-agenda-show-all-dates nil)))
     ("A" agenda ""
     ((org-agenda-ndays 1)
     (org-agenda-overriding-header "Today")))))
#+END_EXAMPLE
