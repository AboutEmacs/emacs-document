#+TITLE: 5 useful Emacs modes for writers
#+URL: https://opensource.com/article/18/5/emacs-modes-writers
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 05月 16日 星期三 21:01:04 CST]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
Not all writers work within the confines of a word processor. More than a few of us tap out words in a humble (and sometimes [[https://opensource.com/article/17/5/atom-text-editor-packages-writers][not so humble]]) text editor.

When you find a text editor that works for you, and works the way you want it to, you tend to hold onto it like that beaten up leather jacket, like that dog-eared book, or like that collection of old vinyl records.

For some, that editor is vi or Vim. For others, it's Nano or Atom. For me, that editor is Emacs. Why? Mainly because of its variety of modes, including some crafted especially for writers.

Here's a look at five Emacs modes that writers will find useful.

* Muse
   :PROPERTIES:
   :CUSTOM_ID: muse
   :END:

When I stumbled upon [[https://www.gnu.org/software/emacs-muse/][Muse]] in the early 2000s, it quickly made Emacs my go-to tool for writing and publishing. You can use this mode to create and publish articles, reports, blog posts, web pages, recipes, poems, documentation, and more.

Writing with Muse is simple. You format your work with a [[http://mwolson.org/static/doc/muse.html#Markup-Rules][markup language]] that's similar to Markdown, with a bit of HTML thrown in for good measure. The markup takes some getting used to, but you should be able to adapt to it quickly.

Once you're done writing, you can publish your work as HTML or XHTML, [[http://blosxom.sourceforge.net/][Blosxom]], [[https://opensource.com/article/17/6/introduction-latex][LaTeX]], [[https://opensource.com/article/17/9/docbook][DocBook]], PDF, or [[https://en.wikipedia.org/wiki/Texinfo][Texinfo]].

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_muse.png?itok=wK4i7pUJ]]

* Org mode
   :PROPERTIES:
   :CUSTOM_ID: org-mode
   :END:

Like Emacs itself, people use [[https://orgmode.org/][Org mode]] for just about everything: from taking notes and [[https://opensource.com/article/17/4/emacs-extensions-organization][maintaining their task lists]], to writing and publishing blog posts, to [[https://opensource.com/article/18/2/how-create-slides-emacs-org-mode-and-revealjs][creating presentation slides]]. And a lot more.

For writers, Org mode is a great way to outline what they're working on and to take notes. You can add links between your notes and outline points, which enables you to jump between bits of information when you need to. You can also add [[https://orgmode.org/org.html#Tags][tags]] to the headings in your notes to make it easier to find specific notes when you need them.

If you need to, you can [[https://orgmode.org/org.html#Exporting][export]] your work to a number of formats, including HTML, LaTeX, ODT, and Markdown.

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_org-mode.png?itok=gw4CW8Dq]]

* Flyspell
   :PROPERTIES:
   :CUSTOM_ID: flyspell
   :END:

No matter how careful you are, typos and misspellings slip through as you're writing. Because of that, every writer should run his or her work through a spelling checker at least once.

I often use [[https://opensource.com/article/18/2/how-check-spelling-linux-command-line-aspell][Aspell]] when working with text files, but I find it's faster to check my spelling within Emacs using [[https://www-sop.inria.fr/members/Manuel.Serrano/flyspell/flyspell.html][Flyspell]]. As you might have guessed from the name, Flyspell is an on-the-fly spelling checker that works as you type.

Flyspell highlights misspelled or unrecognized words. Click the mouse wheel on one of those words to pop up a list of correct spellings. Select the one that you want, or tell Flyspell to remember or ignore that word.

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_flyspell.png?itok=kr_XX254]]

* wc Mode
   :PROPERTIES:
   :CUSTOM_ID: wc-mode
   :END:

You might be writing for a print or online publication. You might have swallowed the myth of the [[https://torquemag.io/2018/04/optimal-content-length/][optimal length of a blog post]]. Or you might just be trying to learn to write short. No matter who you're writing for or why, sometimes you need to make sure your work stays within the boundaries of a word count.

[[https://www.emacswiki.org/emacs/wc-mode.el][wc mode]] does one thing and does it well: It counts the number of words, lines, and characters in what you're writing. You can also highlight a section of text and get its word count.

To use wc mode, type =M-x wc= and the word count of what you're writing appears in the mini buffer at the bottom of the screen. What could be simpler?

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_wc-mode.png?itok=bhdicOuW]]

* WriteGood Mode
   :PROPERTIES:
   :CUSTOM_ID: writegood-mode
   :END:

Writing clear prose takes a lot of work. One key to writing clearly is choosing the correct words. Equally important is knowing which words not to use. No matter your level of experience as a scribe, you can always use some help with that.

That's where [[http://bnbeckwith.com/code/writegood-mode.html][WriteGood Mode]] comes in. It's designed to find common writing problems---mainly passive wording (which too many writers let slip through), duplicate words, and so-called [[https://en.wikipedia.org/wiki/Weasel_word][weasel words]]. WriteGood mode can also perform [[https://en.wikipedia.org/wiki/Readability_test][readability tests]] on your writing.

The list of weasel and passive words that WriteGood mode uses is in the file =writegood-mode.el=. You can add or delete words by editing the file.

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_writegood.png?itok=MXvqarOG]]

** A few other modes worth mentioning
   :PROPERTIES:
   :CUSTOM_ID: a-few-other-modes-worth-mentioning
   :END:

If you're interested in screenwriting (or learning how to do it), you don't need to spend a lot of money on proprietary tools. Instead, take a look at [[https://github.com/rnkn/fountain-mode][Fountain mode]], which lets you work with [[https://fountain.io][Fountain]], a markup language for scripts based on Markdown. After you write your scripts, you can export them as HTML, PDF, or [[https://en.wikipedia.org/wiki/Final_Draft_(software)][Final Draft]] files.

Speaking of Markdown, if you write with that language, you'll want to use [[https://jblevins.org/projects/markdown-mode/][Markdown mode]]. It lets you add formatting using keystrokes or a menu, applies syntax highlighting, and saves your work as HTML. Markdown mode does a lot more, too.

Distractions are everywhere, including within Emacs. To get rid of those distractions, and concentrate on your words, check out [[https://github.com/joostkremers/writeroom-mode][Writeroom mode]]. It hides menus and the toolbar, puts Emacs into full screen mode, and hides the scrollbar.

Do you have a favorite Emacs mode that you use when writing? Why not share it by leaving a comment?
